---
title: "Health Equity: Do White and Non-White Sepsis Patients Benefit the Same from ICU Interventions?"
subtitle: "BMIN503/EPID600 Final Project"
author: "Chen Ziyue"
format: 
  html:
    toc: true
    toc-depth: 3
    editor: visual
    number-sections: true
    embed-resources: true
---

------------------------------------------------------------------------

## Overview {#sec-overview}

This project examines racial inequalities in the treatment and outcomes of sepsis patients within the ICU. Specifically, it investigates whether White and Non-White patients experience the same benefits from ICU interventions like mechanical ventilation (MV), renal replacement therapy (RRT), and vasopressors (VP) across varying levels of illness severity. The study's goals are to identify potential disparities in treatment and outcomes, understand the impact of social race constructs on medical decisions, and ultimately encourage improvements in equitable care practices in critical care settings.

To achieve these goals, the project uses data from the MIMIC-IV and eICU Collaborative Research Databases, which are large, publicly available ICU datasets containing de-identified patient records. The datasets include demographic information, clinical variables, ICU interventions, and in-hospital mortality outcomes, allowing the research team to conduct a retrospective analysis and identify treatment patterns and mortality outcomes across racial groups.

Github link: \> <https://github.com/ZiyueC/BMIN503_Final_Project>

Supervisors: Prof. Blanca E Himes and Prof. Jesse Yenchih Hsu

## Introduction {#sec-introduction}

### Problem and significance

The problem addressed in this study is the presence of racial inequalities in the treatment of sepsis patients within Intensive Care Units (ICUs), focusing on disparities in the administration and effects of critical interventions like mechanical ventilation (MV), renal replacement therapy (RRT), and vasopressors (VP). While sepsis is a life-threatening condition that requires urgent and complex care, treatment practices can differ widely across racial groups, potentially leading to unequal outcomes. Specifically, the study investigates whether the interventions that are standard in critical care are equally effective and equitably applied to both White and Non-White patients. As racial disparities have been documented in ICU settings, examining them in the context of sepsis care underscores the urgency of addressing potential biases in medical treatment.

The significance of this problem is substantial because sepsis is a leading cause of mortality worldwide, particularly among critically ill patients. Inconsistent or biased treatment approaches can exacerbate health disparities and negatively impact survival rates among historically marginalized groups. Recognizing and mitigating such inequalities are crucial to improving patient outcomes and advancing health equity in healthcare systems. The findings of this study could inform clinical guidelines and policy decisions to ensure that ICU interventions are applied equitably, regardless of social constructs like race.

### More biomedical background:

In the intensive care unit (ICU), three critical interventions—mechanical ventilation (MV), renal replacement therapy (RRT), and vasopressors (VP)—are frequently used to manage severe and life-threatening conditions. Mechanical ventilation is employed to support patients with respiratory failure, ensuring adequate oxygenation and ventilation. Renal replacement therapy is used for patients with acute kidney injury or kidney failure to filter waste and maintain fluid balance. Vasopressors are administered to patients experiencing shock or hypotension to constrict blood vessels, raising blood pressure and improving organ perfusion. These interventions are vital in stabilizing critically ill patients, but their use must be carefully managed based on individual needs.

In recent years, the use of critical interventions in the ICU has increased significantly. A study by Yarram et al. (2020) reported a 143% rise in vasopressor infusion procedures across U.S. hospitals between 2005 and 2014, with teaching hospitals seeing a 246% increase. Similarly, Thongprayoon et al. (2016) observed a rise in norepinephrine use across all ICU types, with the medical ICU VUI increasing from 0.24 in 2007 to 0.46 in 2013. These trends reflect the growing reliance on interventions like vasopressors, mechanical ventilation, and renal replacement therapy to manage critically ill patients, highlighting an increasing use of intensive care resources.

### More database background:

The MIMIC and eICU databases are large, publicly available critical care datasets. MIMIC contains detailed data from over 40,000 ICU patients, including demographics, vital signs, and clinical outcomes. eICU provides data from a multi-center ICU network, focusing on patient monitoring and treatment. This study attempts to utilize both MIMIC and eICU databases to explore and analyze critical care interventions and outcomes.

## Methods {#sec-methods}

### Data Sources and Approach

This study analyzes sepsis-related data from two publicly available ICU datasets: MIMIC-IV and eICU-CRD. While the primary analysis in this file focuses on MIMIC-IV data, eICU-CRD will be used for validation in future steps. The results presented here are limited to the MIMIC-IV dataset. The main goal of this analysis is to focus on the methodology and pipeline, rather than solely on the "accuracy" or individual results. As such, the GitHub repository will continue to be updated after the course concludes, incorporating external validation data and refinements to the analysis.

-   **Cohort Selection (we will see more inclusion/exclusion criteria in the Methods and Results section)**:
    -   Patients aged 18+ diagnosed with sepsis (per Angus code-based definition).
    -   Only first-time ICU stays included.
    -   Cases missing race information or discharge location excluded.
-   **Covariates**: Variables include:
    -   Demographics: age, sex, race.
    -   Clinical scores: Sequential Organ Failure Assessment (SOFA), Charlson Comorbidity Index (CCI).
    -   Treatments: Mechanical Ventilation (MV), Renal Replacement Therapy (RRT), and Vasopressors (VP).
    -   Comorbidities: hypertension, COPD, asthma, heart failure, chronic kidney disease, etc.

------------------------------------------------------------------------

### Analysis Pipeline

1.  **Data Preparation**:
    -   Extraction,
    -   Cleaning,
    -   Transformation,
    -   Exploratory Data Analysis (EDA)
2.  **Statistical Models**:
    -   Logistic regression to assess treatment likelihood based on race.
    -   Targeted Maximum Likelihood Estimation (TMLE) to evaluate Average Treatment Effect (ATE).

Now, we begin our analysis. We will include the necessary code steps along with explanations of each part. For some graphs and figures, we will provide immediate feedback, explanations, and short insights. In the Results section, we will focus on reviewing the key figures and tables, offering detailed discussions/limitations and insights based on the findings.

This approach ensures that each step in the analysis is transparent, and the visualizations support a comprehensive understanding of the data and its implications.

### Data Preprocessing and cleaning

```{r}
### load the library
library(dplyr)
library(table1)
library(ggplot2)
library(tidyverse)
```

```{r}
### load the data

data <- read.csv("data/MIMIC_Raw.csv")
print(nrow(data))

# we have 76540 patients in the raw data

```

We can examine the column names (colnames) to identify which variables we will investigate for our analysis. This will help us determine the relevant variables related to mortality, ethnicity, and interventions such as mechanical ventilation, dialysis, and vasopressors. Let's take a look at the colnames to guide our investigation.

```{r}
###  check the variables
#colnames(data) # directly print will generate so many rows - save space
cat(strwrap(paste(colnames(data), collapse = ", "), width = 80), sep = "\n")

```

From the MIMIC documentation (https://physionet.org/content/mimiciv/3.1/), we can identify several interesting and useful variables from the column names. For instance, our primary outcome variable, mortality, is represented by the "hospital_expire_flag." However, in practice, we might need to modify this definition—for example, we may consider patients discharged to hospice as having died, depending on the clinical context.

Another key variable is ethnicity, which is important for our analysis on disparities between different racial and ethnic groups and their chances of receiving medical treatments (such as mechanical ventilation, dialysis, vasopressors, etc.).

We can also identify the types of treatments and interventions in the database. For example, the "pressor" variable indicates whether a patient received vasopressor treatment or not. This variable can be directly used (or quickly transformed) into a binary indicator of whether the patient received this intervention.

On the other hand, the variable "InvasiveVent_hr" only shows mechanical ventilation usage (with a zero indicating no ventilation use). This will require additional work to transform it into a useful binary variable for our analysis, indicating whether the patient was treated with mechanical ventilation during their ICU stay.

```{r}
### Now we start the exclusion/inclusion side

data$sepsis3 <- ifelse(is.na(data$sepsis3), "Non-Sepsis3", "Sepsis3")
sepsis3_count <- as.data.frame(table(data$sepsis3))

data <- data |> 
  filter(sepsis3 == "Sepsis3")
cat("Number of rows in filtered data (only sepsis3 cohort):", nrow(data), "\n")


```

The numbers, 76,540 to 34,789 (after removing non-Sepsis-3 patients), will be used to generate Figure 1.

Here, we apply the Sepsis-3 definition outlined in "The Third International Consensus Definitions for Sepsis and Septic Shock (Sepsis-3)" paper (https://jamanetwork.com/journals/jama/fullarticle/2492881). We save the count of Sepsis-3 cases as sepsis3_count for further analysis in the next code block.

```{r}
### visualize the sepsis3 versus non-sepsis3 patients
colnames(sepsis3_count) <- c("Sepsis3_Status", "Count")

ggplot(sepsis3_count, aes(x = Sepsis3_Status, y = Count, fill = Sepsis3_Status)) +
  geom_bar(stat = "identity", width = 0.6, show.legend = FALSE) +
  geom_text(aes(label = Count), vjust = -0.3, size = 5, color = "black", fontface = "bold") +
  labs(
    title = "Comparison of Sepsis3 and Non-Sepsis3 Patients",
    x = "Sepsis3 Status",
    y = "Number of Patients",
    caption = "Data source: MIMIC-IV"
  ) +
  scale_fill_manual(values = c("skyblue3", "tomato3")) +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    axis.title.x = element_text(face = "bold", size = 14),
    axis.title.y = element_text(face = "bold", size = 14),
    axis.text = element_text(size = 12)
  ) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  coord_cartesian(clip = "off")

rm(sepsis3_count)

```

Next step we exclude patients with an ICU length of stay (LOS) of less than 24 hours or greater than 30 days, based on clinical insights and experience, leading to slight changes in the preliminary results.

Upon reviewing the initial visualization (which will be shown in the next cell block), we observe that most ICU stays fall between 1 and 5 days, supporting the decision to exclude extreme lengths of stay. This adjustment ensures a more clinically relevant analysis by focusing on typical ICU admissions.

```{r}
### only for visualization
filtered_data <- data |> 
  filter(los_icu >= 0 & los_icu <= 40)

# Generate the enhanced histogram for the filtered data
ggplot(filtered_data, aes(x = los_icu)) +
  geom_histogram(binwidth = 1, fill = "skyblue3", color = "white", alpha = 0.9) +
  labs(
    title = "Distribution of ICU Stay Lengths (0-40 Days)",
    x = "Length of ICU Stay (Days)",
    y = "Number of Patients",
    caption = "Data source: MIMIC-IV"
  ) +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
    axis.title.x = element_text(face = "bold", size = 14),
    axis.title.y = element_text(face = "bold", size = 14),
    axis.text = element_text(size = 12),
    panel.grid.major = element_line(color = "gray85", linetype = "dashed"),
    panel.grid.minor = element_blank()
  ) +
  scale_x_continuous(breaks = seq(0, 40, by = 5)) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  coord_cartesian(clip = "off")

rm(filtered_data)

```

```{r}
### check the cohort number for updated dataset
data <- data |> 
  filter(los_icu >= 1 & los_icu <= 30)

cat("Number of rows in filtered data (reasonable icu stays):", nrow(data), "\n")
```

The next step is to exclude non-first ICU stays (recurrent ICU stays), based on prior clinical insights and experience. Excluding these stays will help focus the analysis on the initial ICU admission, ensuring that the data is more relevant for understanding the treatment and outcomes associated with a patient's first ICU encounter.

```{r}
### check the cohort number for updated dataset - first ICU stay
print(table(data$first_icu_stay))
data <- data |> 
  filter(first_icu_stay == TRUE)
cat("Number of rows in filtered data (first ICU stay):", nrow(data), "\n")
```

The next step is to analyze and decide on the inclusion or exclusion of ethnicity and race information. As previously discussed, this information is stored in the "ethnicity" column. Given that the focus of this project is to examine equity and disparities in access to treatments and interventions among different racial and ethnic groups, further clarification and investigation into the distribution and categorization of these groups is necessary. This will ensure that we accurately capture and analyze any disparities that may exist.

```{r}
### check the distribution of race/ethnicity groups
ethnicity_count <- data |> 
  count(ethnicity) |> 
  mutate(percentage = n / sum(n) * 100)


ggplot(ethnicity_count, aes(x = ethnicity, y = n, fill = ethnicity)) +
  geom_bar(stat = "identity", show.legend = FALSE, width = 0.7) +
  geom_text(aes(label = paste0(round(percentage, 1), "%")), vjust = -0.3, size = 4, fontface = "bold", color = "black") +
  labs(
    title = "Distribution of Ethnicity with Percentages",
    x = "Ethnicity",
    y = "Number of Patients",
    caption = "Data source: MIMIC-IV"
  ) +
  scale_fill_brewer(palette = "Set2") +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
    axis.title.x = element_text(face = "bold", size = 14),
    axis.title.y = element_text(face = "bold", size = 14),
    axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
    axis.text.y = element_text(size = 12),
    panel.grid.major = element_line(color = "gray85", linetype = "dashed"),
    panel.grid.minor = element_blank()
  ) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1)))

rm(ethnicity_count)
```

We remove the "others," "unknown," and "unable to obtain" categories in the ethnicity variable to ensure that our comparisons are as accurate as possible. This is a key part of the data cleaning process, as it helps eliminate ambiguous or non-informative entries, allowing us to focus on meaningful and reliable data for analysis.

```{r}
### check the cohort number for updated dataset
data <- data |> 
  filter(!(ethnicity %in% c("UNABLE TO OBTAIN", "UNKNOWN", "OTHER")))

cat("Number of rows in filtered data (with available ethnicity info):", nrow(data), "\n")
```

Finally, we save our data into a cleaned dataset, which will be used for further analysis. By doing this, we avoid the need to redo the inclusion-exclusion criteria in subsequent analyses, ensuring a more efficient workflow moving forward. This cleaned dataset will serve as the foundation for all future steps in our analysis.

Some supplementary notes on why we do not set exclusion criteria for the missing data: The main reason lies in the unique structure of how the raw data is recorded. For instance, as mentioned earlier, one of the key variables, "pressor," which indicates whether a vasopressor was used in treatment, has "True" values for patients who received a vasopressor. NA values in this variable are interpreted as 'False,' as they implicitly indicate the absence of treatment.

Given this, we do not remove missing data in the inclusion/exclusion steps. Instead, we plan to handle the missing values later by transforming the variable into a binary format, based on a review of the documentation for each variable. This ensures that the data is processed correctly while maintaining its original structure and meaning.

```{r}
### save the cleaned dataset for future use
write.csv(data, "data/MIMIC_Clean.csv", row.names = FALSE)
```

### EDA: Exploratory Data Analysis

Based on our cleaned data, we can proceed with more exploratory data analysis (EDA). The first step will focus on the race/ethnicity distribution, after excluding categories such as "others," "unable to obtain," and similar ambiguous classifications. This will allow for a clearer understanding of the racial and ethnic composition in the dataset, enabling us to perform more meaningful comparisons and analysis in later steps.

```{r}
### check the distribution of race/ethnicity group in the cleaned dataset
ethnicity_count <- data |> 
  count(ethnicity) |> 
  mutate(percentage = n / sum(n) * 100)

# Create the enhanced pie chart
pie_chart <- ggplot(ethnicity_count, aes(x = "", y = percentage, fill = ethnicity)) +
  geom_bar(stat = "identity", width = 1, color = "white") +
  coord_polar(theta = "y", start = 0) +
  geom_text(aes(label = paste0(round(percentage, 1), "%")), 
            position = position_stack(vjust = 0.5), size = 4, color = "white", fontface = "bold") +
  labs(
    title = "Ethnicity Distribution (Pie Chart)",
    caption = "Data source: MIMIC-IV"
  ) +
  scale_fill_brewer(palette = "Set3") +
  theme_minimal(base_size = 15) +
  theme(
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    panel.grid = element_blank(),
    plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
    legend.title = element_text(face = "bold", size = 14),
    legend.text = element_text(size = 12)
  )

# Display the pie chart
print(pie_chart)



```

White patients still dominate the dataset, comprising 80.3% of the population. This is the primary reason why, in later analyses, we choose to compare White versus non-White groups. If we were to perform individual paired comparisons, such as White versus Black, the results might not be statistically significant due to the dominance of White individuals in the data. This imbalance likely stems from the MIMIC dataset, which is based in the USA, specifically Boston. Given the raw data distribution and inherent bias, it is challenging to achieve a balanced dataset.

However, we can explore ways to address this in the future during the external validation steps. For instance, we could integrate datasets from more diverse regions or include a database with a higher representation of Asian patients. However, data integration presents its own challenges, particularly concerning clinical standards and interoperability, which will need to be carefully considered.

```{r}
### barplot and more visualization of the race/ethnicity group distribution
bar_chart <- ggplot(ethnicity_count, aes(x = ethnicity, y = n, fill = ethnicity)) +
  geom_bar(stat = "identity", show.legend = FALSE, width = 0.7, color = "white") +
  geom_text(aes(label = n), vjust = -0.3, size = 4, fontface = "bold", color = "black") +
  labs(
    title = "Ethnicity Distribution (Bar Chart)",
    x = "Ethnicity",
    y = "Number of Patients",
    caption = "Data source: MIMIC-IV"
  ) +
  scale_fill_brewer(palette = "Pastel1") +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
    axis.title.x = element_text(face = "bold", size = 14),
    axis.title.y = element_text(face = "bold", size = 14),
    axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
    axis.text.y = element_text(size = 12),
    panel.grid.major = element_line(color = "gray85", linetype = "dashed"),
    panel.grid.minor = element_blank()
  ) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1)))

print(bar_chart)

rm(ethnicity_count)

```

The above bar plot clearly illustrates why paired comparisons cannot be performed. To address this, we can regroup all non-white individuals to create a nearly 20% versus 80% comparison—still imbalanced, but significantly improved compared to the original 98% versus 2%.

The next step involves a more detailed analysis and visualization of the variables. Specifically, we will examine the distribution of our main variables—mortality, intervention (mechanical ventilation, renal replacement therapy, and vasopressor)—within each ethnicity group. However, before proceeding with this analysis, we will need to perform some additional data transformations to ensure the data is properly structured for these comparisons.

```{r}
### We first do some data transformation. we will explain them in the next texts
data_EDA <- data |>
  mutate(vent_hr = ifelse(is.na(InvasiveVent_hr), 0, InvasiveVent_hr)) |>
  mutate(vent = ifelse(vent_hr > 0, 1, 0)) |>
  mutate(vp = ifelse(pressor == "true", 1, 0)) |>
  mutate(rrt = !is.na(rrt)) |>
  mutate(death_int = ifelse(hospital_expire_flag == 1 | discharge_location == "HOSPICE", 1, 
                            ifelse(discharge_location == "", NaN, 0)))


```

From the MIMIC documentation and the explanation of the raw data, I realized that some of the variables needed adjustments to make them more useful for analysis. For instance, the variable "InvasiveVent_hr" represents the number of hours a patient was on invasive ventilation, but it has missing values for patients who never required ventilation. From experience, I know that leaving these missing values as they are might confuse the analysis, so I decided to set them to "0". This makes it clear that these patients did not receive invasive ventilation. I also created a new variable, "vent", to indicate whether ventilation was used, assigning "1" if hours were greater than "0" and "0" otherwise. This binary variable simplifies understanding of whether a patient received ventilation at all.

The "pressor" variable indicates whether vasopressors were administered, which is crucial for understanding the intensity of treatment. Based on the raw data and documentation, I found that this variable is recorded as "true" or "false." To streamline this for analysis, I created a new variable, "vp", to represent vasopressor use as a binary value: "1" for "true" and "0" otherwise. This transformation makes it easier to analyze how vasopressor use correlates with other clinical outcomes.

For renal replacement therapy ("rrt"), I used my experience working with similar datasets to identify whether this treatment was administered. The presence or absence of data for "rrt" directly indicates whether the therapy was used, so I created a logical variable that marks it as "TRUE" if data exists and "FALSE" otherwise. This approach matchs with common practices when dealing with such variables in medical datasets.

The variable "death_int" is critical for understanding patient outcomes. From the MIMIC documentation, I know that "hospital_expire_flag" shows whether a patient passed away during their hospital stay, while "discharge_location" provides additional context, such as if the patient was discharged to hospice care. Combining these two variables, I created "death_int", which marks patients as deceased ("1") if they died in the hospital or were sent to hospice. If the "discharge_location" was blank, I set this value to "NaN", as it’s unclear. For all other cases, the value is "0". This approach ensures that patient mortality is captured as accurately as possible, based on the available data.

By making these adjustments, I think the dataset is better prepared for exploratory data analysis and downstream modeling, reflecting both the information in the MIMIC dataset and practical considerations for handling medical data.

After performing basic data transformations, we can proceed with further exploratory data analysis (EDA). For instance, we can start by comparing the mortality rates across different racial groups. Please note that while our subsequent analysis will focus on comparing WHITE versus non-WHITE groups, this step aims to visualize and examine the distribution of all racial groups. This approach helps uncover potential patterns or insights and ensures the data is well-prepared for more focused analyses.

```{r}
### mortality distribution inside the different race/ethnicity groups

data_EDA_summary <- data_EDA |>
  group_by(ethnicity) |>
  summarise(
    total_people = n(),
    mortality_people = sum(death_int, na.rm = TRUE),
    mortality_rate = (mortality_people / total_people) * 100
  )

ggplot(data_EDA_summary, aes(x = ethnicity)) +
  geom_bar(aes(y = total_people, fill = "Total People"), stat = "identity", position = "identity", alpha = 0.7, color = "black") +
  geom_bar(aes(y = mortality_people, fill = "Mortality/Death"), stat = "identity", position = "identity", alpha = 1, color = "black") +
  geom_text(
    aes(y = total_people, label = paste0(round(mortality_rate, 1), "%")),
    vjust = -0.3, size = 4, fontface = "bold", color = "black"
  ) +
  labs(
    title = "Mortality Rates by Ethnicity (Bar Plot)",
    x = "Ethnicity",
    y = "Count",
    fill = "Group",
    caption = "Data source: MIMIC-IV"
  ) +
  scale_fill_manual(values = c("Total People" = "skyblue3", "Mortality/Death" = "tomato3")) +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
    axis.title.x = element_text(face = "bold", size = 14),
    axis.title.y = element_text(face = "bold", size = 14),
    axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
    axis.text.y = element_text(size = 12),
    legend.title = element_text(face = "bold"),
    panel.grid.major = element_line(color = "gray85", linetype = "dashed"),
    panel.grid.minor = element_blank()
  ) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1)))

```

The mortality rate among "White" patients is 16.5%, while "Asian" patients exhibit the highest mortality rate at 18.7%. For "Black" patients, the mortality rate is 17.1%, and for "Hispanic" patients, it is slightly lower at 14.7%. However, for "Alaska Native" patients, the rate is 11.5%, but due to the small sample size of only 61 individuals, this figure may not be reliable or directly comparable. Further comparisons, including statistical significance tests such as p-values, can be conducted to validate these observations. Overall, the mortality rates across different racial groups appear relatively similar and fall within a comparable range.

Next, we compare the intervention usage rates across the race groups.

```{r}
### the usage of intervention between different race/ethnicity groups
data_EDA_summary <- data_EDA |>
  group_by(ethnicity) |>
  summarise(
    total_people = n(),
    rrt_people = sum(rrt, na.rm = TRUE),
    rrt_rate = (rrt_people / total_people) * 100
  )

ggplot(data_EDA_summary, aes(x = ethnicity)) +
  geom_bar(aes(y = total_people, fill = "Total People"), stat = "identity", position = "identity", alpha = 0.7, color = "black") +
  geom_bar(aes(y = rrt_people, fill = "RRT Usage"), stat = "identity", position = "identity", alpha = 1, color = "black") +
  geom_text(
    aes(y = total_people, label = paste0(round(rrt_rate, 1), "%")),
    vjust = -0.3, size = 4, fontface = "bold", color = "black"
  ) +
  labs(
    title = "RRT Usage Rates by Ethnicity (Bar Plot)",
    x = "Ethnicity",
    y = "Count",
    fill = "Group",
    caption = "Data source: MIMIC-IV"
  ) +
  scale_fill_manual(values = c("Total People" = "skyblue3", "RRT Usage" = "tomato3")) +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
    axis.title.x = element_text(face = "bold", size = 14),
    axis.title.y = element_text(face = "bold", size = 14),
    axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
    axis.text.y = element_text(size = 12),
    legend.title = element_text(face = "bold"),
    panel.grid.major = element_line(color = "gray85", linetype = "dashed"),
    panel.grid.minor = element_blank()
  ) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1)))

```

However, unlike the relatively similar distribution in mortality rates between different race and ethnicity groups—refer to the previous code block—we observe a significant and large difference in the usage of "RRT" (renal replacement therapy) across these groups. For example, among "White" individuals, the usage rate of "RRT" is only 8.44%, whereas all other groups show notably higher usage rates: "Asian" at 10.6%, "Black" at 18.6%, and "Hispanic" at 13%. These findings highlight a clear disparity in "RRT" usage between "White" individuals and other groups.

It’s important to note that this observation comes directly from the raw data. This means we haven’t accounted for any potential confounders or applied any statistical models to explain this disparity. The percentages are simple comparisons based on raw data without adjustments. Later, in the logistic regression model, we will assess whether this significant statistical finding persists after controlling for potential confounders. For instance, if "White" individuals in the dataset are, on average, younger than patients from other racial or ethnic groups, the lower usage of "RRT" might be explained by age differences. This is just one example to illustrate the importance of further investigation. We will need to conduct more detailed analyses to fully understand these disparities and their underlying causes.

Hence, we now build the descriptive statistics table (Table 1) and proceed with the logistic regression analysis. Similar to the EDA process, we will first perform some data transformations to prepare the dataset for analysis.

```{r}
### the main data transformation part
sepsis_data <- data |>
  mutate(Male = ifelse(gender == "M",1,0))|>
  mutate(age_int = admission_age)|>
  mutate(age_cat = ifelse(age_int >= 18 & age_int <= 34, "18 - 34",
                          ifelse(age_int >= 35 & age_int <= 44, "35 - 44",
                                 ifelse(age_int >= 45 & age_int <= 64, "45 - 64",
                                        ifelse(age_int >= 65 & age_int <= 74, "65 - 74",
                                               ifelse(age_int >= 75 & age_int <= 84, "75 - 84", "85 and above"))))))|>
  mutate(vent_hr = ifelse(is.na(InvasiveVent_hr),0, InvasiveVent_hr))|>
  
  mutate(vent = ifelse(vent_hr > 0, 1, 0))|>
  mutate(vp = ifelse(pressor == "true", 1, 0))|>
  mutate(renal = !is.na(data$rrt))|>
  mutate(year = anchor_year_group)|>
  mutate(white = ifelse(ethnicity == "WHITE", "WHITE", "Non-WHITE"))|>
  mutate(cci_int = charlson_comorbidity_index)|>
  mutate(cci_cat = ifelse(cci_int >= 0 & cci_int <= 5, "0 - 5",
                          ifelse(cci_int >= 6 & cci_int <= 10, "6 - 10",
                                 ifelse(cci_int >= 11 & cci_int <= 15, "11 - 15","16 and above"))))|>
  mutate(death_int = ifelse(hospital_expire_flag == 1 | discharge_location == "HOSPICE" ,1, 
                            ifelse(discharge_location == "", NaN, 0)))|>
  mutate(death_cat = ifelse(hospital_expire_flag == 1,"Died in Hospital",
                            ifelse(discharge_location == "HOSPICE" ,"Discharged to Hospice", "Alive")))|>
  mutate(sofa_int=SOFA)|>
  mutate(sofa_cat = ifelse(sofa_int >= 0 & sofa_int <= 3, "0 - 3",
                           ifelse(sofa_int >= 4 & sofa_int <= 6, "4 - 6",
                                  ifelse(sofa_int >= 7 & sofa_int <= 10, "7 - 10", "11 and above"))))


```

In the above code, except those variables we have already explained (please check the previous EDA section). The variable "death_cat" provides a more descriptive categorization of patient outcomes. From the MIMIC documentation and raw data, I observed that while "death_int" simplifies outcomes into binary values, this variable captures whether the patient "Died in Hospital," was "Discharged to Hospice," or remained "Alive." I think this can help distinguish between different types of critical outcomes more clearly.

For the Sequential Organ Failure Assessment ("SOFA") score, I created the variable "sofa_int" to directly store the numeric SOFA score from the raw data. This was then categorized into "sofa_cat" to group patients by the severity of their SOFA scores: "0 - 3," "4 - 6," "7 - 10," and "11 and above." From experience, categorizing scores in this way is useful for comparing groups with different severity levels, as it matchs with how SOFA is often interpreted in clinical practice.

By adding these variables, the dataset becomes more informative and ready for more detailed analysis of patient outcomes and organ failure severity. These additions enrich the clinical context provided by the data.

Next, we can generate the descriptive statistic table.

```{r}
### the descriptive table generation
table1(~ year + as.factor(Male)+as.factor(vent)+vent_hr+as.factor(renal)
       +as.factor(vp)+cci_int+cci_cat+ death_cat + sofa_int + sofa_cat
       | white, data=sepsis_data, render.missing=NULL,topclass="Rtable1-grid Rtable1-shade Rtable1-times")


```

Is this version of Table 1 readable? No, it is not!

The table contains several row names that could be more intuitive and reader-friendly. Technical terms like "as.factor(Male)", "as.factor(vent)", and "as.factor(renal)" should be replaced with clearer labels like "Gender", "Ventilation Required (binary indicator)", and "Renal Replacement Therapy (binary indicator)". Similarly, "vp" could be renamed "Vasopressor Use (binary indicator)". For numeric variables like "vent_hr", "cci_int", and "sofa_int", labels such as "Ventilation Hours", "Charlson Comorbidity Index (raw score)", and "SOFA Score (raw)" would provide better clarity, while categorical variables like "cci_cat" and "sofa_cat" could be renamed to include "(categories)". Outcome-related labels like "death_cat" might be revised to "Patient Outcome (categories)". Additionally, group labels like "Non-WHITE" could benefit from a more neutral term, such as "Other Ethnicities", to ensure inclusivity. Lastly, adding brief descriptions to category ranges (e.g., "Low Comorbidity (0 - 5)") could enhance interpretability.

Now, we modify our Table 1.

```{r}
### more cleaned table 1
sepsis_data_1 <- sepsis_data |>
  rename(
    Anchor_Year = year,
    Gender = Male,
    Ventilation_Use = vent,
    Ventilation_Hours = vent_hr,
    Renal_Replacement_Therapy = renal,
    Vasopressor_Use = vp,
    Charlson_Comorbidity_Index = cci_int,
    Charlson_Comorbidity_Categories = cci_cat,
    Patient_Outcome = death_cat,
    SOFA_Score = sofa_int,
    SOFA_Score_Categories = sofa_cat,
    Ethnicity = white
  )

sepsis_data_1 <- sepsis_data_1 |>
  mutate(Gender = factor(Gender, levels = c(0, 1), labels = c("Female", "Male")))

sepsis_data_1 <- sepsis_data_1 |>
  mutate(Vasopressor_Use = factor(Vasopressor_Use, levels = c(0, 1), labels = c("No", "Yes")))

sepsis_data_1 <- sepsis_data_1 |>
  mutate(Ventilation_Use = factor(Ventilation_Use, levels = c(0, 1), labels = c("No", "Yes")))

#sepsis_data_1 <- sepsis_data_1 |>
#  mutate(Renal_Replacement_Therapy = factor(Renal_Replacement_Therapy, #levels = c('No', 'Yes'), labels = c("No", "Yes")))

sepsis_data_1 <- sepsis_data_1 |>
  mutate(SOFA_Score_Categories = factor(SOFA_Score_Categories, 
                                        levels = c("0 - 3", "4 - 6", "7 - 10", "11 and above")))

sepsis_data_1 <- sepsis_data_1 |>
  mutate(Charlson_Comorbidity_Categories = factor(Charlson_Comorbidity_Categories, 
                                                  levels = c("0 - 5", "6 - 10", "11 - 15", "16 and above")))




table1(~ Anchor_Year +
       Gender +
       Ventilation_Use +
       Ventilation_Hours +
       Renal_Replacement_Therapy +
       Vasopressor_Use +
       Charlson_Comorbidity_Index +
       Charlson_Comorbidity_Categories +
       Patient_Outcome +
       SOFA_Score +
       SOFA_Score_Categories
       | Ethnicity, 
       data = sepsis_data_1, 
       render.missing = NULL, 
       topclass = "Rtable1-grid Rtable1-shade Rtable1-times")
```

We have successfully resolved the issues, and the updated Table 1 for descriptive statistics is now clearer, more formal, and visually enhanced. This improved presentation facilitates a better understanding of the key variables and their distributions, providing a solid foundation for subsequent analyses.

We can summarize some finding from the table 1. An analysis of Table 1 indicates that Non-WHITE patients present with higher severity of illness and exhibit disparities in treatment compared to WHITE patients. Non-WHITE individuals have slightly higher mean scores on both the Charlson Comorbidity Index (CCI) (6.31 vs. 6.07) and the SOFA score (6.79 vs. 6.37), suggesting a greater burden of chronic diseases and organ dysfunction upon admission. In terms of treatment, Non-WHITE patients are more likely to receive renal replacement therapy (16.0% vs. 8.4%) and have longer mean ventilation hours (30.2 vs. 26.0 hours), indicating a need for more intensive care. Conversely, they have a lower usage of vasopressors (44.2% vs. 51.9%) compared to WHITE patients. These disparities highlight potential differences in both the severity of conditions and the medical interventions provided between the two groups.

Now, we save the dataset into a new file after applying the transformations. This step is essential as it allows flexibility for future analyses, where the transformation plan might change (e.g., regrouping SOFA or CCI scores into new clinically defined thresholds and groups). By saving two intermediate files—one from raw to cleaned data and another from cleaned to transformed data—we ensure a clear workflow and the ability to revisit earlier stages of data preparation if needed.

```{r}
### save the data for future use

write.csv(sepsis_data, "data/MIMIC_transformed.csv", row.names = FALSE)

```

### Logistic Regression

Logistic regression is a statistical method used for modeling binary outcomes (in our case, the mortality) based on one or more predictor variables. Unlike linear regression, which predicts continuous outcomes, logistic regression predicts the probability of an event occurring, such as survival or death, represented as a binary variable (e.g., 0 or 1). The model uses the logistic function, or sigmoid curve, to transform linear combinations of predictors into probabilities bounded between 0 and 1. Logistic regression assumes a linear relationship between the predictors and the log-odds of the outcome, making it effective for interpreting the influence of predictors. based on the lecture we get from this course we pick this model and in practise Its simplicity, interpretability, and efficiency make it a fundamental tool in statistics and machine learning.

We begin by cleaning all the current variables. After completing the cleaning process, we re-import the transformed CSV file to continue the analysis with the updated and standardized data. This step ensures that the subsequent analyses are based on a well-prepared dataset.

```{r}
### reload the data, clean the environment
rm(list = ls())
sepsis_data = read.csv("data/MIMIC_transformed.csv")

```

In the logistic regression model, the first relationship we analyzed was between the usage of RRT (renal replacement therapy) and race/ethnicity (White versus non-WHITE). This relationship was chosen because it exhibited the most significant difference in the descriptive statistics (16.0% in the non-WHITE group versus 8.4% in the WHITE group, as shown in Table 1). To account for potential confounding factors, we included the following variables in the model: sex, CCI score, SOFA score, age, and the usage of the other two interventions (vasopressor and mechanical ventilation). This approach ensures that the observed differences in RRT usage are not solely attributable to these confounders.

```{r}
### the first logistic regression model - adjust code from our class material

lr_model <- glm(
  formula = as.factor(renal) ~ white + as.factor(Male) + cci_int  + 
    sofa_int + as.factor(vp) + as.factor(vent) + admission_age,
  data = sepsis_data,
  family = binomial(link = "logit") # Logistic regression
)

summary(lr_model)
```

From the results summarized in the logistic regression model, the primary variable of interest, the usage of RRT, is statistically significant (p-value \< 0.05). At a significance level of 0.05, the only variable with a p-value above this threshold is 'Sex' (Female versus Male), suggesting no significant difference in RRT usage between genders. This highlights the importance of other variables in influencing RRT usage while indicating that gender may not be a significant factor in this context.

The odds ratio (OR) is a statistical measure used to quantify the strength of association between two events, typically in binary outcomes. It compares the odds of an event occurring in one group to another, with OR \> 1 indicating increased odds, OR \< 1 decreased odds, and OR = 1 no association.

The next step involves analyzing the odds ratios and their corresponding 95% confidence intervals (CIs).

```{r}
### the summary and odds ratio for the logistic regression model


coef_summary <- summary(lr_model)$coefficients
coef_white <- coef_summary["whiteWHITE", "Estimate"]
se_white <- coef_summary["whiteWHITE", "Std. Error"]


odds_ratio_white <- exp(coef_white)
ci_lower <- exp(coef_white - 1.96 * se_white)
ci_upper <- exp(coef_white + 1.96 * se_white)

odds_ratio_white
ci_lower
ci_upper


```

From the calculation, the odds ratio (OR) for the White group receiving renal replacement therapy (RRT) is 0.58 (95% CI: 0.52–0.65), with the non-WHITE group as the baseline. This indicates that White patients are significantly less likely to receive RRT compared to non-WHITE patients, consistent with the findings in Table 1, where the usage of RRT was 16.0% in the non-WHITE group and 8.4% in the White group. These results are derived from our logistic regression model, which accounts for additional confounders, making the conclusions more robust and reliable.

Next, we save the calculated odds ratios and proceed with additional rounds of logistic regression for two other types of interventions. The results will be regrouped and systematically integrated in the Results section for a comprehensive comparison.

```{r}
### save the results
RRT <- list(
  Odds_Ratio = odds_ratio_white,
  CI_Lower = ci_lower,
  CI_Upper = ci_upper
)
```

We also aim to assess multicollinearity in the logistic regression model by examining the Variance Inflation Factor (VIF) values. Additionally, we will perform a quick test of an interaction term to evaluate its potential impact on the model. These steps ensure the robustness and reliability of the regression analysis.

```{r}
### check the VIF value, and build one interaction model to check
library(car)

vif_values <- vif(lr_model)

print(vif_values)


lr_model_interaction <- glm(
  as.factor(renal) ~ white + admission_age + as.factor(Male) + cci_int + 
    cci_cat + sofa_int + sofa_cat + as.factor(vent) + 
    as.factor(vp) + sofa_int * as.factor(vent),
  data = sepsis_data,
  family = binomial(link = "logit")
)

summary(lr_model_interaction)
```

The Variance Inflation Factor (VIF) values in our model range from 1 to 2, indicating low multicollinearity among the predictor variables. This confirms that the model's estimates are stable, reliable, and minimally affected by inter-variable correlations, enhancing both interpretability and accuracy.

We also evaluated an interaction term, informed by medical knowledge, within the logistic regression model. Specifically, we examined the interaction between the SOFA score and the use of mechanical ventilation, as these factors may jointly influence patient outcomes. However, the results did not show significant changes compared to the original model. Therefore, we opted not to include interaction terms in subsequent analyses.

Next, we will conduct additional rounds of logistic regression for the other two interventions to further investigate their relationships with patient outcomes.

```{r}
### the second LR model on vasopressor
lr_model <- glm(
  formula = as.factor(vp) ~ white + as.factor(Male) + cci_int  + 
    sofa_int + as.factor(renal) + as.factor(vent) + admission_age,
  data = sepsis_data,
  family = binomial(link = "logit") # Logistic regression
)

coef_summary <- summary(lr_model)$coefficients
coef_white <- coef_summary["whiteWHITE", "Estimate"]
se_white <- coef_summary["whiteWHITE", "Std. Error"]


odds_ratio_white <- exp(coef_white)
ci_lower <- exp(coef_white - 1.96 * se_white)
ci_upper <- exp(coef_white + 1.96 * se_white)

VP <- list(
  Odds_Ratio = odds_ratio_white,
  CI_Lower = ci_lower,
  CI_Upper = ci_upper
)

```

```{r}
### the third LR model on MV-ventilation
lr_model <- glm(
  formula = as.factor(vent) ~ white + as.factor(Male) + cci_int  + 
    sofa_int + as.factor(renal) + as.factor(vp) + admission_age,
  data = sepsis_data,
  family = binomial(link = "logit") # Logistic regression
)

coef_summary <- summary(lr_model)$coefficients
coef_white <- coef_summary["whiteWHITE", "Estimate"]
se_white <- coef_summary["whiteWHITE", "Std. Error"]


odds_ratio_white <- exp(coef_white)
ci_lower <- exp(coef_white - 1.96 * se_white)
ci_upper <- exp(coef_white + 1.96 * se_white)

Vent <- list(
  Odds_Ratio = odds_ratio_white,
  CI_Lower = ci_lower,
  CI_Upper = ci_upper
)
```

Mortality is closely linked to patient severity. In this study, we used the SOFA score to stratify patients into different severity groups for further analysis. Additionally, the use of medical interventions is often related with patient severity; for instance, renal replacement therapy (RRT) is typically administered to patients experiencing severe renal dysfunction or organ failure.

The Sequential Organ Failure Assessment (SOFA) score is a clinical tool used to assess the extent of organ dysfunction in critically ill patients, particularly those with sepsis. It evaluates six organ systems: respiratory, cardiovascular, hepatic, coagulation, renal, and neurological, assigning a score from 0 (normal function) to 4 (severe dysfunction) for each system. The total SOFA score helps predict patient outcomes, with higher scores indicating greater severity and risk of mortality. It is widely used in intensive care units (ICUs) for monitoring disease progression, guiding treatment decisions, and comparing patient outcomes in clinical studies. The SOFA score is objective, reproducible, and essential for assessing critical illness.

Based on clinical experience, we divided the SOFA scores into four distinct groups (as shown in Table 1): 0–3, 4–6, 7–10, and 11 and above. We then reanalyzed the logistic regression (LR) within each group. The aim of this stratified analysis was to investigate whether the relationship between intervention usage and mortality persists across different racial and ethnic groups when controlling for similar levels of patient severity.

```{r}
### the split of the original dataset - into different SOFA score groups

sepsis_split <- split(sepsis_data, sepsis_data$sofa_cat)
sepsis_split_0_3 <- sepsis_split[["0 - 3"]]
sepsis_split_4_6 <- sepsis_split[["4 - 6"]]
sepsis_split_7_10 <- sepsis_split[["7 - 10"]]
sepsis_split_11_above <- sepsis_split[["11 and above"]]


```

```{r}
### integrate the results(for all patients), prepare for future use
OR_df <- data.frame(
  Group = c("RRT", "Vent", "VP"),
  Odds_Ratio = c(RRT$Odds_Ratio, Vent$Odds_Ratio, VP$Odds_Ratio),
  Lower = c(RRT$CI_Lower, Vent$CI_Lower, VP$CI_Lower),
  Upper = c(RRT$CI_Upper, Vent$CI_Upper, VP$CI_Upper),
  stringsAsFactors = FALSE
)

rownames(OR_df) <- OR_df$Group
OR_df$Group <- NULL 

OR_df
```

```{r}
### RRT in split groups
for (category in names(sepsis_split)) {
  subset_data <- sepsis_split[[category]]
  lr_model <- glm(
  formula = as.factor(renal) ~ white + as.factor(Male) + cci_int  + 
    sofa_int + as.factor(vent) + as.factor(vp) + admission_age,
  data = subset_data,
  family = binomial(link = "logit") # Logistic regression
)
  
  coef_summary <- summary(lr_model)$coefficients
  coef_white <- coef_summary["whiteWHITE", "Estimate"]
  se_white <- coef_summary["whiteWHITE", "Std. Error"]
  
  
  odds_ratio_white <- exp(coef_white)
  ci_lower <- exp(coef_white - 1.96 * se_white)
  ci_upper <- exp(coef_white + 1.96 * se_white)
  
  OR_df <- rbind(
  OR_df,
  data.frame(
      Odds_Ratio = odds_ratio_white,
      Lower = ci_lower,
      Upper = ci_upper
    )
  )
  rownames(OR_df)[nrow(OR_df)] <- paste0("RRT", category)
}

### VP
for (category in names(sepsis_split)) {
  subset_data <- sepsis_split[[category]]
  lr_model <- glm(
  formula = as.factor(vp) ~ white + as.factor(Male) + cci_int  + 
    sofa_int + as.factor(vent) + as.factor(renal) + admission_age,
  data = subset_data,
  family = binomial(link = "logit") # Logistic regression
)
  
  coef_summary <- summary(lr_model)$coefficients
  coef_white <- coef_summary["whiteWHITE", "Estimate"]
  se_white <- coef_summary["whiteWHITE", "Std. Error"]
  
  
  odds_ratio_white <- exp(coef_white)
  ci_lower <- exp(coef_white - 1.96 * se_white)
  ci_upper <- exp(coef_white + 1.96 * se_white)
  
  OR_df <- rbind(
  OR_df,
  data.frame(
      Odds_Ratio = odds_ratio_white,
      Lower = ci_lower,
      Upper = ci_upper
    )
  )
  rownames(OR_df)[nrow(OR_df)] <- paste0("VP", category)
}

### Ventilation
for (category in names(sepsis_split)) {
  subset_data <- sepsis_split[[category]]
  lr_model <- glm(
  formula = as.factor(vent) ~ white + as.factor(Male) + cci_int  + 
    sofa_int + as.factor(vp) + as.factor(renal) + admission_age,
  data = subset_data,
  family = binomial(link = "logit") # Logistic regression
)
  
  coef_summary <- summary(lr_model)$coefficients
  coef_white <- coef_summary["whiteWHITE", "Estimate"]
  se_white <- coef_summary["whiteWHITE", "Std. Error"]
  
  
  odds_ratio_white <- exp(coef_white)
  ci_lower <- exp(coef_white - 1.96 * se_white)
  ci_upper <- exp(coef_white + 1.96 * se_white)
  
  OR_df <- rbind(
  OR_df,
  data.frame(
      Odds_Ratio = odds_ratio_white,
      Lower = ci_lower,
      Upper = ci_upper
    )
  )
  rownames(OR_df)[nrow(OR_df)] <- paste0("Vent", category)
}

```

```{r}
### check the result table
OR_df
```

We will further analyze this table in the Results section, applying additional transformations and enhancing its presentation for clearer and more visually interesting insights.

This concludes the logistic regression analysis section.

### Casual Inference: A little try

Our next part is the TMLE/ATE side.

Previously, we focused on investigating inequalities between “ethnicities” (X) and the “usage of interventions” (Y), exploring whether disparities exist in how medical interventions are allocated across different ethnic groups. Now, we shift our focus to examining the relationship between the “usage of interventions” (new X) and “mortality” (new Y). Specifically, we aim to determine whether the use of critical interventions—mechanical ventilation (MV), renal replacement therapy (RRT), and vasopressors (VP)—reduces the risk of mortality. Can we use another logistic regression model to address this question? Unfortunately, no. Logistic regression is useful for addressing associative questions, such as “Are intervention usage and mortality related?” However, it does not establish causation or reveal whether the intervention directly impacts mortality outcomes. This limitation arises because patients requiring interventions are already at higher baseline risk, meaning the observed relationships might reflect pre-existing differences rather than causal effects. Establishing causality requires alternative analytical approaches.

Hence, to investigate the causal effects and relationships, we need to employ more advanced causal inference methods. These methods help disentangle causation from mere association by accounting for confounding variables and biases that affect observational data.

The method we use in casual inference is TMLE: Targeted Maximum Likelihood Estimation (TMLE) is a robust causal inference method that integrates machine learning with statistical theory. It estimates causal effects by reducing bias and improving efficiency, making it suitable for complex observational data and intervention analysis.

The final result we are looking for is ATE: The Average Treatment Effect (ATE) quantifies the average difference in outcomes between treated and untreated groups in a population (in our case, those people who get the intervention - VP, RRT, and MV versus those people whod o not get the intervention). It measures the causal impact of an intervention by comparing expected outcomes, accounting for confounding variables. ATE is central in causal inference to evaluate treatment efficacy and inform decision-making.

For example, we first test within the WHITE group, focusing on the SOFA score severity group of 0-3. Here, we calculate the Average Treatment Effect (ATE) for the use of mechanical ventilation (MV). This serves as a demonstration to explain the code implementation and interpret the resulting outputs, providing clarity on the methodology and its applications.

```{r}
### re-transform the data for TMLE use

sepsis_data <- sepsis_data %>% mutate(death_bin = ifelse(discharge_location == "DIED" | discharge_location == "HOSPICE" , 1, ifelse(discharge_location == "", NaN, 0)))

subgroup_data <- sepsis_data  |>
  filter(white == "WHITE", sofa_int >= 0, sofa_int <= 3)

subgroup_data <- subgroup_data  |>
  mutate(pressor = ifelse(pressor == TRUE, 1, 0))

subgroup_data <- subgroup_data |>
  mutate(rrt = ifelse(is.na(rrt), 0, ifelse(rrt == 1, 1, 0)))

W <- subgroup_data[, c("anchor_age", "gender", "SOFA", "cci_int", "cci_cat", "admission_age", "pressor", "rrt")]
A <- subgroup_data$vent
Y <- subgroup_data$death_bin

# Run TMLE
library(tmle)
ate_result <- tmle(
  Y = Y,
  A = A,
  W = W,
  family = "binomial",
  g.SL.library = c("SL.glm", "SL.glmnet", "SL.mean"),
  Q.SL.library = c("SL.glm", "SL.glmnet", "SL.mean")
)

# Print ATE result
summary(ate_result)
```

Some explanation of the above code: This code implements a Targeted Maximum Likelihood Estimation (TMLE) to estimate the causal effect of a binary treatment "A" on a binary outcome "Y," while adjusting for covariates "W". TMLE is a robust statistical method often used in causal inference studies to account for confounding factors and provide double-robust estimates. In this context, "A" represents whether a specific intervention or treatment (ventilation) was applied, "Y" indicates the outcome (binary mortality status), and "W" includes potential confounding factors that could influence both "A" and "Y".

The covariates "W" are extracted from the dataset "subgroup_data" by selecting columns relevant to the analysis. These include variables like "anchor_age," "gender," "SOFA," "cci_int," "cci_cat," "admission_age," "pressor," and "rrt." These variables are chosen based on their potential influence on both the treatment assignment ("A") and the outcome ("Y"). By including these confounders, TMLE aims to reduce bias in estimating the causal effect of "A" on "Y."

The binary treatment variable "A" is assigned as "vent," representing whether a patient received ventilation. Similarly, the binary outcome "Y" is set as "subgroup_data\$death_bin," indicating whether the patient experienced mortality. The goal is to assess the causal impact of ventilation on mortality while accounting for confounding factors through "W."

TMLE is implemented using the tmle package, which provides tools for this type of causal analysis. The algorithm models both the outcome ("Y") given the treatment ("A") and covariates ("W") and the treatment assignment ("A") given the covariates ("W"). For flexible modeling, the code specifies a library of machine learning algorithms (g.SL.library and Q.SL.library) that includes generalized linear models (SL.glm), regularized regression models (SL.glmnet), and simple mean-based predictions (SL.mean). This flexibility helps improve the robustness of the estimates by leveraging ensemble learning techniques.

TMLE estimates the Average Treatment Effect (ATE), providing confidence intervals and metrics to quantify the causal effect of 'A' on 'Y' while adjusting for 'W.' This approach ensures that the results are robust to model misspecification, providing reliable causal interpretations of the relationship between the treatment and the outcome.

From the results: inside those White people with slight-severity: SOFA score 0-3. The Average Treatment Effect (ATE) provides insight into the absolute impact of mechanical ventilation (MV) on mortality across the entire population. The ATE, reported as the Additive Effect, has a parameter estimate of 0.030055, indicating that mechanical ventilation increases the probability of mortality by approximately 3 percentage points.

This effect is statistically significant, with a p-value of 0.0014108, indicating strong evidence against the null hypothesis of no effect. The 95% confidence interval for the ATE ranges from 0.011603 to 0.048508, which does not include zero. This suggests that the observed increase in mortality due to mechanical ventilation is not only statistically significant but also meaningful in practical terms.

These results imply that, on average, the slight serious (SOFA score 0-3) patients who undergo mechanical ventilation have a higher absolute risk of mortality compared to those who do not, highlighting the need to carefully consider the risks and benefits of MV in critical care settings.

The next step is to extend the analysis to other non-WHITE patients and the remaining SOFA groups. Before proceeding, we ensure that the previous results are saved to maintain a clear record and allow for comparisons in subsequent analyses.

```{r}
### check the ATE results
ate <- ate_result$estimates$ATE$psi
ci_lower <- ate_result$estimates$ATE$CI[1]
ci_upper <- ate_result$estimates$ATE$CI[2]

white_sofa_0_3 <- list(
  ATE_Estimate = ate,
  CI_Lower = ci_lower,
  CI_Upper = ci_upper
)
```

```{r}
### redo the ATE analysis for non-WHITE group

subgroup_data <- sepsis_data  |>
  filter(white == "Non-WHITE", sofa_int >= 0, sofa_int <= 3)

subgroup_data <- subgroup_data  |>
  mutate(pressor = ifelse(pressor == TRUE, 1, 0))

subgroup_data <- subgroup_data |>
  mutate(rrt = ifelse(is.na(rrt), 0, ifelse(rrt == 1, 1, 0)))

W <- subgroup_data[, c("anchor_age", "gender", "SOFA", "cci_int", "cci_cat", "admission_age", "pressor", "rrt")]
A <- subgroup_data$vent
Y <- subgroup_data$death_bin

# Run TMLE
library(tmle)
ate_result <- tmle(
  Y = Y,
  A = A,
  W = W,
  family = "binomial",
  g.SL.library = c("SL.glm", "SL.glmnet", "SL.mean"),
  Q.SL.library = c("SL.glm", "SL.glmnet", "SL.mean")
)


ate <- ate_result$estimates$ATE$psi
ci_lower <- ate_result$estimates$ATE$CI[1]
ci_upper <- ate_result$estimates$ATE$CI[2]

non_white_sofa_0_3 <- list(
  ATE_Estimate = ate,
  CI_Lower = ci_lower,
  CI_Upper = ci_upper
)

```

We continue this process for the remaining SOFA groups, ensuring that each group is analyzed consistently. By doing so, we maintain a thorough examination of the patterns and relationships across all severity levels, enabling a complete and detailed interpretation of the results.

PLEASE NOTICE: (After the first round of running the TMLE/SuperLearner analysis, we saved all the results in the ate_df dataframe and exported it as a CSV file. The reason for this is that each round of analysis is very time-consuming, and the rendering process can be quite lengthy. To avoid repeating this extensive computation, we commented out all the code below after the first run, ensuring that the results could be reused without the need to re-run the entire analysis.)

```{r}
### SOFA 4-6

#subgroup_data <- sepsis_data  |>
#  filter(white == "WHITE", sofa_int >= 4, sofa_int <= 6)

#subgroup_data <- subgroup_data  |>
#  mutate(pressor = ifelse(pressor == TRUE, 1, 0))

#subgroup_data <- subgroup_data |>
#  mutate(rrt = ifelse(is.na(rrt), 0, ifelse(rrt == 1, 1, 0)))

#W <- subgroup_data[, c("anchor_age", "gender", "SOFA", "cci_int", "cci_cat", "admission_age", "pressor", "rrt")]
#A <- subgroup_data$vent
#Y <- subgroup_data$death_bin

#ate_result <- tmle(
#  Y = Y,
#  A = A,
#  W = W,
#  family = "binomial",
#  g.SL.library = c("SL.glm", "SL.glmnet", "SL.mean"),
#  Q.SL.library = c("SL.glm", "SL.glmnet", "SL.mean")
#)


#ate <- ate_result$estimates$ATE$psi
#ci_lower <- ate_result$estimates$ATE$CI[1]
#ci_upper <- ate_result$estimates$ATE$CI[2]

#white_sofa_4_6 <- list(
#  ATE_Estimate = ate,
#  CI_Lower = ci_lower,
#  CI_Upper = ci_upper
#)


#subgroup_data <- sepsis_data  |>
#  filter(white == "Non-WHITE", sofa_int >= 4, sofa_int <= 6)

#subgroup_data <- subgroup_data  |>
#  mutate(pressor = ifelse(pressor == TRUE, 1, 0))

#subgroup_data <- subgroup_data |>
#  mutate(rrt = ifelse(is.na(rrt), 0, ifelse(rrt == 1, 1, 0)))

#W <- subgroup_data[, c("anchor_age", "gender", "SOFA", "cci_int", "cci_cat", "admission_age", "pressor", "rrt")]
#A <- subgroup_data$vent
#Y <- subgroup_data$death_bin

#ate_result <- tmle(
#  Y = Y,
#  A = A,
#  W = W,
#  family = "binomial",
#  g.SL.library = c("SL.glm", "SL.glmnet", "SL.mean"),
#  Q.SL.library = c("SL.glm", "SL.glmnet", "SL.mean")
#)


#ate <- ate_result$estimates$ATE$psi
#ci_lower <- ate_result$estimates$ATE$CI[1]
#ci_upper <- ate_result$estimates$ATE$CI[2]
#
#non_white_sofa_4_6 <- list(
#  ATE_Estimate = ate,
#  CI_Lower = ci_lower,
#  CI_Upper = ci_upper
#)
```

```{r}
### SOFA 7-10
# subgroup_data <- sepsis_data  |>
#   filter(white == "WHITE", sofa_int >= 7, sofa_int <= 10)

# subgroup_data <- subgroup_data  |>
#   mutate(pressor = ifelse(pressor == TRUE, 1, 0))

# subgroup_data <- subgroup_data |>
#   mutate(rrt = ifelse(is.na(rrt), 0, ifelse(rrt == 1, 1, 0)))

# W <- subgroup_data[, c("anchor_age", "gender", "SOFA", "cci_int", "cci_cat", "admission_age", "pressor", "rrt")]
# A <- subgroup_data$vent
# Y <- subgroup_data$death_bin

# ate_result <- tmle(
#   Y = Y,
#   A = A,
#   W = W,
#   family = "binomial",
#   g.SL.library = c("SL.glm", "SL.glmnet", "SL.mean"),
#   Q.SL.library = c("SL.glm", "SL.glmnet", "SL.mean")
# )

# ate <- ate_result$estimates$ATE$psi
# ci_lower <- ate_result$estimates$ATE$CI[1]
# ci_upper <- ate_result$estimates$ATE$CI[2]

# white_sofa_7_10 <- list(
#   ATE_Estimate = ate,
#   CI_Lower = ci_lower,
#   CI_Upper = ci_upper
# )


# subgroup_data <- sepsis_data  |>
#   filter(white == "Non-WHITE", sofa_int >= 7, sofa_int <= 10)

# subgroup_data <- subgroup_data  |>
#   mutate(pressor = ifelse(pressor == TRUE, 1, 0))

# subgroup_data <- subgroup_data |>
#   mutate(rrt = ifelse(is.na(rrt), 0, ifelse(rrt == 1, 1, 0)))

# W <- subgroup_data[, c("anchor_age", "gender", "SOFA", "cci_int", "cci_cat", "admission_age", "pressor", "rrt")]
# A <- subgroup_data$vent
# Y <- subgroup_data$death_bin

# ate_result <- tmle(
#   Y = Y,
#   A = A,
#   W = W,
#   family = "binomial",
#   g.SL.library = c("SL.glm", "SL.glmnet", "SL.mean"),
#   Q.SL.library = c("SL.glm", "SL.glmnet", "SL.mean")
# )

# ate <- ate_result$estimates$ATE$psi
# ci_lower <- ate_result$estimates$ATE$CI[1]
# ci_upper <- ate_result$estimates$ATE$CI[2]

# non_white_sofa_7_10 <- list(
#   ATE_Estimate = ate,
#   CI_Lower = ci_lower,
#   CI_Upper = ci_upper
# )
```

```{r}
### SOFA: >11
# subgroup_data <- sepsis_data  |>
#   filter(white == "WHITE", sofa_int >= 11)

# subgroup_data <- subgroup_data  |>
#   mutate(pressor = ifelse(pressor == TRUE, 1, 0))

# subgroup_data <- subgroup_data |>
#   mutate(rrt = ifelse(is.na(rrt), 0, ifelse(rrt == 1, 1, 0)))

# W <- subgroup_data[, c("anchor_age", "gender", "SOFA", "cci_int", "cci_cat", "admission_age", "pressor", "rrt")]
# A <- subgroup_data$vent
# Y <- subgroup_data$death_bin

# ate_result <- tmle(
#   Y = Y,
#   A = A,
#   W = W,
#   family = "binomial",
#   g.SL.library = c("SL.glm", "SL.glmnet", "SL.mean"),
#   Q.SL.library = c("SL.glm", "SL.glmnet", "SL.mean")
# )

# ate <- ate_result$estimates$ATE$psi
# ci_lower <- ate_result$estimates$ATE$CI[1]
# ci_upper <- ate_result$estimates$ATE$CI[2]

# white_sofa_greater_11 <- list(
#   ATE_Estimate = ate,
#   CI_Lower = ci_lower,
#   CI_Upper = ci_upper
# )


# subgroup_data <- sepsis_data  |>
#   filter(white == "Non-WHITE", sofa_int >= 11)

# subgroup_data <- subgroup_data  |>
#   mutate(pressor = ifelse(pressor == TRUE, 1, 0))

# subgroup_data <- subgroup_data |>
#   mutate(rrt = ifelse(is.na(rrt), 0, ifelse(rrt == 1, 1, 0)))

# W <- subgroup_data[, c("anchor_age", "gender", "SOFA", "cci_int", "cci_cat", "admission_age", "pressor", "rrt")]
# A <- subgroup_data$vent
# Y <- subgroup_data$death_bin

# ate_result <- tmle(
#   Y = Y,
#   A = A,
#   W = W,
#   family = "binomial",
#   g.SL.library = c("SL.glm", "SL.glmnet", "SL.mean"),
#   Q.SL.library = c("SL.glm", "SL.glmnet", "SL.mean")
# )

# ate <- ate_result$estimates$ATE$psi
# ci_lower <- ate_result$estimates$ATE$CI[1]
# ci_upper <- ate_result$estimates$ATE$CI[2]

# non_white_sofa_greater_11 <- list(
#   ATE_Estimate = ate,
#   CI_Lower = ci_lower,
#   CI_Upper = ci_upper
# )
```

Next, we consolidate all the results into a data frame for further visualization and analysis, which will be presented in the Results section. This step ensures that the findings are organized and ready for comprehensive interpretation and graphical representation.

```{r}
### integrate the results

#results_list <- list(
#  "Non-White, SOFA_0_3" = non_white_sofa_0_3,
#  "Non-White, SOFA_4_6" = non_white_sofa_4_6,
#  "Non-White, SOFA_7_10" = non_white_sofa_7_10,
#  "Non-White, SOFA>11" = non_white_sofa_greater_11,
#  "White, SOFA_0_3" = white_sofa_0_3,
#  "White, SOFA_4_6" = white_sofa_4_6,
#  "White, SOFA_7_10" = white_sofa_7_10,
#  "White, SOFA>11" = white_sofa_greater_11
#)

#ate_df <- do.call(rbind, lapply(names(results_list), function(name) {
#  result <- results_list[[name]]
#  data.frame(
#    ATE = result$ATE_Estimate,
#    lowerCI = result$CI_Lower,
#    upperCI = result$CI_Upper,
#    row.names = name
#  )
#}))

# Save the CSV file so that in the next round, we do not need to re-run the time-consuming TMLE codes.

#write.csv(ate_df, "data/ATE_df.csv", row.names = TRUE)

#ate_df

```

## Results {#sec-results}

### The result for the data cleaning and EDA

The results are primarily detailed in the Method section, where we meticulously cleaned, transformed, and performed initial visualizations step by step. Many of these visualizations are not repeated here to avoid redundancy. Instead, we present the finalized Figure 1, which illustrates the cohort selection process. This figure was created using Lucid, an online flowchart generator that is both convenient and user-friendly.

(Lucid link: https://lucid.app/lucidchart/fe833994-0f72-4dad-be4f-9a8625ba5d3d/edit?viewport_loc=-297%2C1384%2C2746%2C1232%2C0_0&invitationId=inv_62d53acb-350c-455b-b9d2-2d368aa2ace9)

The code below works in RStudio. However, if the HTML file fails to display the figure, you can find it explicitly saved in the "figures" folder within the GitHub repository.

```{r}
### load and print the picture (generate from Lucid)
library(magick)

image_path <- "C:/Users/Ellery/Desktop/BMIN5030/Final_Project_Final/BMIN503_Final_Project/figures/TMLE_Sepsis_MIMIC_Fig1.png"

image <- magick::image_read(image_path)
print(image)

```

### Discussion of the data source and cohort selection

As we mentioned earlier, most data transformation and EDA analyses, direct results, and insights are discussed in the Methods section. Here, however, we investigate further into the data source and outline future validation steps.

The primary data source for this study is the publicly available MIMIC database, which is free to access. While we considered incorporating the eICU-CRD database, we decided against integrating it into this class project to maintain the completeness of the MIMIC-focused analysis. Preliminary findings from eICU-CRD match with our conclusions, such as the relationship between the use of RRT and race/ethnicity groups, as highlighted in the logistic regression section of the Methods.

In future research, we aim to refine cohort selection criteria to ensure more accurate data for analysis. Additionally, we plan to incorporate external validation datasets. However, challenges remain in ICU databases, where privacy concerns and PHI restrictions often limit data availability. Exploring local datasets, such as those from UPenn Medicine’s biobank system, could be a potential solution, although accessing such data presents complexities.

One noteworthy EDA result is that White patients comprise approximately 80% of the current dataset. To enhance diversity in future analyses, we plan to intentionally select datasets with more balanced demographic representation for validation and testing purposes. This will help ensure robust and generalizable findings.

### The result for the logistic regression

Recall from the method section that all logistic regression (LR) results were saved in the OR_df data frame. In this section, we will begin by examining the original OR_df, applying necessary transformations, and then proceed to further visualization and detailed interpretation to derive meaningful insights from the data.

```{r}
### re-check the result
OR_df
```

```{r}
### better visualize the table

rownames(OR_df) <- gsub("RRT0 - 3", "RRT: 0-3", rownames(OR_df))
rownames(OR_df) <- gsub("RRT11 and above", "RRT: 11+", rownames(OR_df))
rownames(OR_df) <- gsub("RRT4 - 6", "RRT: 4-6", rownames(OR_df))
rownames(OR_df) <- gsub("RRT7 - 10", "RRT: 7-10", rownames(OR_df))

rownames(OR_df) <- gsub("VP0 - 3", "VP: 0-3", rownames(OR_df))
rownames(OR_df) <- gsub("VP11 and above", "VP: 11+", rownames(OR_df))
rownames(OR_df) <- gsub("VP4 - 6", "VP: 4-6", rownames(OR_df))
rownames(OR_df) <- gsub("VP7 - 10", "VP: 7-10", rownames(OR_df))

rownames(OR_df) <- gsub("Vent0 - 3", "Vent: 0-3", rownames(OR_df))
rownames(OR_df) <- gsub("Vent11 and above", "Vent: 11+", rownames(OR_df))
rownames(OR_df) <- gsub("Vent4 - 6", "Vent: 4-6", rownames(OR_df))
rownames(OR_df) <- gsub("Vent7 - 10", "Vent: 7-10", rownames(OR_df))


logical_order <- c(
  "RRT", "RRT: 0-3", "RRT: 4-6", "RRT: 7-10", "RRT: 11+",
  "VP", "VP: 0-3", "VP: 4-6", "VP: 7-10", "VP: 11+",
  "Vent", "Vent: 0-3", "Vent: 4-6", "Vent: 7-10", "Vent: 11+"
)

OR_df <- OR_df[logical_order, ]

OR_df$Formatted_OR <- sprintf(
  "%.2f (%.2f–%.2f)",
  OR_df$Odds_Ratio,
  OR_df$Lower,
  OR_df$Upper
)

formatted_OR_df <- data.frame(
  Variable = rownames(OR_df),
  Formatted_OR = OR_df$Formatted_OR,
  row.names = NULL
)

formatted_OR_df


```

```{r}
### better visualize the table
treatment_categories <- c("MV", "RRT", "VP")
sofa_ranges <- c("ALL", "0-3", "4-6", "7-10", "11+")
transformed_table <- matrix(NA, nrow = length(treatment_categories), ncol = length(sofa_ranges))
rownames(transformed_table) <- treatment_categories
colnames(transformed_table) <- sofa_ranges


transformed_table["MV", "ALL"] <- OR_df["Vent", "Formatted_OR"]
transformed_table["MV", "0-3"] <- OR_df["Vent: 0-3", "Formatted_OR"]
transformed_table["MV", "4-6"] <- OR_df["Vent: 4-6", "Formatted_OR"]
transformed_table["MV", "7-10"] <- OR_df["Vent: 7-10", "Formatted_OR"]
transformed_table["MV", "11+"] <- OR_df["Vent: 11+", "Formatted_OR"]

transformed_table["RRT", "ALL"] <- OR_df["RRT", "Formatted_OR"]
transformed_table["RRT", "0-3"] <- OR_df["RRT: 0-3", "Formatted_OR"]
transformed_table["RRT", "4-6"] <- OR_df["RRT: 4-6", "Formatted_OR"]
transformed_table["RRT", "7-10"] <- OR_df["RRT: 7-10", "Formatted_OR"]
transformed_table["RRT", "11+"] <- OR_df["RRT: 11+", "Formatted_OR"]

transformed_table["VP", "ALL"] <- OR_df["VP", "Formatted_OR"]
transformed_table["VP", "0-3"] <- OR_df["VP: 0-3", "Formatted_OR"]
transformed_table["VP", "4-6"] <- OR_df["VP: 4-6", "Formatted_OR"]
transformed_table["VP", "7-10"] <- OR_df["VP: 7-10", "Formatted_OR"]
transformed_table["VP", "11+"] <- OR_df["VP: 11+", "Formatted_OR"]

transformed_table_df <- as.data.frame(transformed_table)

transformed_table_df

```

So the results here: The odds ratio (OR) analysis compares the likelihood of interventions between White and Non-White patients, with Non-White patients as the baseline, stratified by SOFA scores (0-3, 4-6, 7-10, 11+) to reflect patient severity. Across all SOFA groups, White patients are more likely to receive mechanical ventilation (MV) (OR: 1.09; 95% CI: 1.01–1.17) and vasopressors (VP) (OR: 1.49; 95% CI: 1.38–1.61), particularly in the moderate SOFA ranges (4-6 and 7-10). Conversely, they are less likely to receive renal replacement therapy (RRT) overall (OR: 0.58; 95% CI: 0.52–0.65) (recall our finding in the table 1-descriptive statsitics), with this trend consistent across most SOFA groups, except in the lowest (0-3) and highest (11+) severity categories, where the confidence intervals widen and suggest potential variability. These findings highlight disparities in intervention use between racial groups, varying with clinical severity.

Here is a visualization of the odds ratio:

```{r}
### plot the ORs

OR_df$Term <- rownames(OR_df)
OR_df$Term <- factor(OR_df$Term, levels = rev(rownames(OR_df)))
OR_df$Term <- as.character(OR_df$Term)
OR_df$Term[OR_df$Term == "RRT"] <- "RRT (all)"
OR_df$Term[OR_df$Term == "VP"] <- "VP (all)"
OR_df$Term[OR_df$Term == "Vent"] <- "Vent (all)"
OR_df$Term <- factor(OR_df$Term, levels = rev(unique(OR_df$Term)))


ggplot(OR_df, aes(x = Odds_Ratio, y = Term)) +
  geom_point(size = 3, color = "darkblue") +
  geom_errorbarh(aes(xmin = Lower, xmax = Upper), height = 0.2, color = "darkgray", size = 0.5) +
  geom_vline(xintercept = 1, linetype = "dashed", color = "red", size = 0.8) +
  theme_minimal(base_size = 14) +
  labs(
    title = "Odds ratios with 95% confidence intervals for RRT, VP, and Ventilation stratified by SOFA score.",
    x = "Odds Ratio",
    y = NULL
  ) +
  theme(
    axis.text.y = element_text(size = 12, face = "bold"),
    axis.text.x = element_text(size = 12),
    axis.title.x = element_text(size = 14, face = "bold"),
    plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
    panel.grid.major.y = element_blank(),
    panel.grid.minor = element_blank()
  ) +
  scale_x_continuous(limits = c(0, 2.5), breaks = seq(0, 2.5, 0.5))

```

### The result for the TMLE/ATE

Recall from the method section that all ATE results were saved in the ate_df data frame. In this section, we will focus on further visualization and detailed interpretation of these results to enhance our understanding of the findings.

```{r}
### load the ate results (recall we save it before)

ate_df = read.csv("data/ATE_df.csv")
ate_df
```

```{r}
### regroup the table
ate_df$SOFA <- factor(
  rep(c("0-3", "4-6", "7-10", ">10"), 2),
  levels = c("0-3", "4-6", "7-10", ">10")
)
ate_df$Group <- ifelse(grepl("Non-White", ate_df$X), "Non-White", "White")


white_ate_df <- ate_df[ate_df$Group == "White", ]

ggplot(white_ate_df, aes(x = SOFA, y = ATE, group = Group, color = Group)) +
  geom_hline(yintercept = 0, color = "black", linetype = "dashed", size = 0.8) +  
  geom_line(size = 1.5, color = "red") +  
  geom_point(size = 3, color = "red") +  
  geom_errorbar(aes(ymin = lowerCI, ymax = upperCI), width = 0.2, size = 0.8, color = "red") +
  scale_y_continuous(limits = c(-0.2, 0.2)) +  
  labs(
    title = "TMLE across SOFA ranges for White Patients: Ventilation",
    x = "SOFA Range",
    y = "ATE (%) Treated vs. Not Treated",
    color = "Group"
  ) +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
    axis.title.x = element_text(face = "bold", size = 14),
    axis.title.y = element_text(face = "bold", size = 14),
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12),
    legend.position = "none", 
    panel.grid.major = element_line(color = "gray85", linetype = "dashed"),
    panel.grid.minor = element_blank()
  )


```

For White patients, the ATE analysis using TMLE to evaluate the impact of ventilation on mortality reveals detailed results across SOFA score groups. In patients with SOFA scores of 0-3 and 4-6, ventilation is associated with a slight increase in mortality risk, as indicated by positive ATE values (0.030 and 0.037, respectively), with confidence intervals that do not include zero. For SOFA scores of 7-10, the association weakens, with an ATE of 0.009 and a confidence interval crossing zero, suggesting no significant effect. Notably, in the highest SOFA group (\>11), ventilation shows a negative ATE (-0.101), indicating reduced mortality risk. These results suggest that ventilation is most beneficial for critically ill patients with high SOFA scores but may over-harm less critically ill patients, as indicated by increased mortality risk in lower SOFA score groups. This highlights the need for careful assessment of ventilation as a treatment in less severe cases.

```{r}
### plot the ATE for non-White patients
non_white_ate_df <- ate_df[ate_df$Group == "Non-White", ]


ggplot(non_white_ate_df, aes(x = SOFA, y = ATE, group = Group, color = Group)) +
  geom_hline(yintercept = 0, color = "black", linetype = "dashed", size = 0.8) +  
  geom_line(size = 1.5, color = "gray") +  
  geom_point(size = 3, color = "gray") +  
  geom_errorbar(aes(ymin = lowerCI, ymax = upperCI), width = 0.2, size = 0.8, color = "gray") + 
  scale_y_continuous(limits = c(-0.2, 0.2)) +  
  labs(
    title = "TMLE across SOFA ranges for Non-White Patients: Ventilation",
    x = "SOFA Range",
    y = "ATE (%) Treated vs. Not Treated",
    color = "Group"
  ) +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
    axis.title.x = element_text(face = "bold", size = 14),
    axis.title.y = element_text(face = "bold", size = 14),
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12),
    legend.position = "none",  
    panel.grid.major = element_line(color = "gray85", linetype = "dashed"),
    panel.grid.minor = element_blank()
  )
```

For Non-White patients, the ATE analysis using TMLE reveals a pattern similar to that observed in White patients across different SOFA score groups. In patients with SOFA scores of 0-3 and 4-6, ventilation is associated with slightly increased mortality risk, indicated by positive ATE values (0.021 and 0.047, respectively). For SOFA scores of 7-10, the effect weakens, with an ATE of 0.038 and a confidence interval crossing zero, suggesting no significant impact. In the highest SOFA group (\>11), ventilation shows a negative ATE (-0.050), indicating reduced mortality risk. These findings suggest that mortality and ATE are not significantly influenced by race or ethnicity, as the patterns remain consistent between Non-White and White patients. This further underscores the importance of using ventilation based on clinical severity rather than demographic factors.

### Discussion and Limitation for the TMLE/ATE analysis

In our TMLE and ATE modeling, we intentionally did not incorporate a wide range of machine learning libraries to enhance accuracy. This decision was driven by two key considerations. First, time constraints limited our ability to experiment extensively with different algorithms and optimization techniques. Second, our primary focus was on the methodology and analysis pipeline, emphasizing the robustness of causal inference over the pursuit of marginal improvements in accuracy or evaluation metrics. However, incorporating more advanced machine learning tools and techniques to refine the model's performance remains a promising avenue for future research.

At the same time, this ATE analysis serves as an initial demonstration. We are encouraged by the results, such as the observed 3-5% ATE in less severe patient groups, which suggests that using interventions in these cases might increase mortality—potentially over-harming them. Notably, a study by Ranieri et al. (JAMA, 1999) found that mechanical ventilation can induce harmful inflammatory responses, particularly with higher tidal volumes, highlighting the importance of cautious use. However, since this is a preliminary attempt, we have not extended the analysis to compare other interventions. Instead, our immediate focus is to further investigate this project and dataset, ensuring we refine our understanding and obtain more accurate and reliable results. In the future, we aim to incorporate additional machine learning libraries and tools (for example, the more advanced Random Forest, SVM, and XGBoost) to enhance our analyses and enable more comprehensive comparisons of interventions.

## Conclusion

This analysis highlights critical disparities and insights in healthcare interventions using a combination of EDA, logistic regression, and TMLE. This analysis revealed significant racial disparities, with White patients more likely to receive mechanical ventilation (odds ratio \[OR\]: 1.09; 95% CI: 1.01–1.17) and vasopressors (OR: 1.49; 95% CI: 1.38–1.61) but less likely to receive renal replacement therapy (OR: 0.58; 95% CI: 0.52–0.65). Logistic regression provided robust evidence of these disparities while accounting for confounders such as disease severity measured by SOFA scores. To establish causality, TMLE estimated the Average Treatment Effect (ATE) for interventions on mortality. Notably, mechanical ventilation was associated with a slight increase in mortality risk for low-severity patients (ATE: +3%, p\<0.01) but showed a protective effect in high-severity groups (ATE: -10%). These findings highlight the need to customize interventions based on patient severity and address racial inequities in treatment to improve overall outcomes.

## Acknowledgements

As a class project, I would like to express my heartfelt gratitude to Dr. Himes for providing excellent lectures and an enriching R coding experience. I have learned so much through this course, with many components—machine learning, data cleaning, visualization, and more—integrated into this project. Special thanks to Dr. Hsu for providing valuable materials, discussions, and supervision, which greatly guided my work. I am also grateful to Anastasia and Jakob for their helpful office hours and outstanding TA support throughout the course. Thank you all once again, and I wish you the very best in your future research endeavors!
